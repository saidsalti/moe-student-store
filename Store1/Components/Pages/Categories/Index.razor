@page "/categories/index"
@using Store1.Data.Dtos
@using Store1.Data.Models
@using Store1.Data.Services
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@inject ICategoryService _categoryService
@inject NavigationManager NavigationManager
@inject IAppTempData _tempData
@attribute [Authorize]
<MudPopoverProvider />

<style>
    .textCustomColor{
        color:green;
        border:2px dashed #000;
    }
</style>

@{
    if (_tempData.data!=null)
    {
        var messageModel = _tempData.data as MessageModel;
    
        <MessageDisplay Message="@messageModel!.Message" AlertSeverity="messageModel.Severity"></MessageDisplay>
    }
}
<MudGrid>

    <MudItem xs="12" >
        <MudPaper Elevation="25">
            <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="NavigateToPage"></MudIconButton>
        </MudPaper>
    </MudItem>
    <MudItem xs="12">
        <MudPaper Elevation="25" >
            <AppPageTitle Title="Through this window, the main categories of products are displayed." />

        </MudPaper>
        <MudDataGrid Bordered="true" Items="categories">
            <Columns>
                <PropertyColumn Property="x => x.Id" Title="Id" />
                @* <PropertyColumn Property="x => x.NameAr" /> *@
                    <TemplateColumn>
                        <CellTemplate>
                        <MudText Class="textCustomColor"  Typo="Typo.h5">@context.Item.NameAr</MudText>

                        </CellTemplate>
                    </TemplateColumn>
                <PropertyColumn Property="x => x.IsActive" />
                <TemplateColumn Title="ImageTemplate">
                    <CellTemplate>

                        @{
                            var imagePath = $"/{context.Item.ImagePath}";
                        }
                        <MudImage Width="70" Src="@imagePath"></MudImage>

                    </CellTemplate>
                </TemplateColumn>

                <TemplateColumn>
                    <CellTemplate>
                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" OnClick="()=>EditCategory(context.Item.Id)" ></MudIconButton>
                        <MudIconButton Color="Color.Error" Icon="@Icons.Material.Outlined.RestoreFromTrash" OnClick="()=>DeleteCategory(context.Item.Id)"></MudIconButton>

                    </CellTemplate>
                </TemplateColumn>
            </Columns>
            <PagerContent>
                <MudDataGridPager T="CategoryDto"></MudDataGridPager>
            </PagerContent>
        </MudDataGrid>
    </MudItem>
</MudGrid>




@code {
    List<CategoryDto> categories = new ();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = _categoryService.FindAll();
    }
    private void NavigateToPage()
    {

        NavigationManager.NavigateTo("/categories/add");
    }

    private void  EditCategory(int?id){
        NavigationManager.NavigateTo($"/categories/edit/{id}");
    }

    private void DeleteCategory(int?id){
        NavigationManager.NavigateTo($"/categories/delete/{id}");

    }
}
